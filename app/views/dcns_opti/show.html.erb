<%=  javascript_include_tag 'jquery/jquery.jqplot/plugins/jqplot.categoryAxisRenderer.min.js', :plugin => 'redmine_backlogs' %>

<!-- script type="text/javascript" src="/plugins_assets/redmine_backlogs/javascripts/jquery/jquery.jqplot/plugins/jqplot.categoryAxisRenderer.min.js"></script -->

<%
  def myDate(date)
    date.strftime("%d %b").to_s
  end
  p1 = []
  p2 = []
  p3 = []
  p4 = []

  t1 = []
  t2 = []
  t3 = []
  t4 = []
  dates  = []

  # hand made data

  dates << myDate( Date.new(2012,1,16)) ; p1 << 106 ;  p2 << 0 ; p3 << 0 ; p4 << 0 ; t1 << 810 ; t2 << 0 ; t3 << 0 ; t4 << 0
  dates << myDate( Date.new(2012,1,17)) ; p1 << 106 ;  p2 << 0 ; p3 << 0 ; p4 << 0 ; t1 << 810 ; t2 << 0 ; t3 << 0 ; t4 << 0
  dates << myDate( Date.new(2012,1,18)) ; p1 << 106 ;  p2 << 0 ; p3 << 0 ; p4 << 0 ; t1 << 810 ; t2 << 0 ; t3 << 0 ; t4 << 0
  dates << myDate( Date.new(2012,1,19)) ; p1 << 106 ;  p2 << 0 ; p3 << 0 ; p4 << 0 ; t1 << 810 ; t2 << 0 ; t3 << 0 ; t4 << 0
  dates << myDate( Date.new(2012,1,20)) ; p1 << 106 ;  p2 << 0 ; p3 << 0 ; p4 << 0 ; t1 << 810 ; t2 << 0 ; t3 << 0 ; t4 << 0
  # d << myDate( Date.new(2012,1,21)) ; p1 << 106 ;  p2 << 0 ; p3 << 0 ; p4 << 0 ; t1 << 810 ; t2 << 0 ; t3 << 0 ; t4 << 0
  # d << myDate( Date.new(2012,1,22)) ; p1 << 106 ;  p2 << 0 ; p3 << 0 ; p4 << 0 ; t1 << 810 ; t2 << 0 ; t3 << 0 ; t4 << 0
  dates << myDate( Date.new(2012,1,23)) ; p1 << 100 ;  p2 << 6 ; p3 << 0 ; p4 << 0 ; t1 << 810 ; t2 << 0 ; t3 << 0 ; t4 << 0
  dates << myDate( Date.new(2012,1,24)) ; p1 << 100 ;  p2 << 6 ; p3 << 0 ; p4 << 0 ; t1 << 810 ; t2 << 0 ; t3 << 0 ; t4 << 0
  dates << myDate( Date.new(2012,1,25)) ; p1 << 100 ;  p2 << 6 ; p3 << 0 ; p4 << 0 ; t1 << 810 ; t2 << 0 ; t3 << 0 ; t4 << 0
  dates << myDate( Date.new(2012,1,26)) ; p1 << 100 ;  p2 << 6 ; p3 << 0 ; p4 << 0 ; t1 << 810 ; t2 << 0 ; t3 << 0 ; t4 << 0
  dates << myDate( Date.new(2012,1,27)) ; p1 << 100 ;  p2 << 0 ; p3 << 0 ; p4 << 6 ; t1 << 810 ; t2 << 0 ; t3 << 0 ; t4 << 0
  # d << myDate( Date.new(2012,1,28)) ; p1 << 106 ;  p2 << 0 ; p3 << 0 ; p4 << 0 ; t1 << 810 ; t2 << 0 ; t3 << 0 ; t4 << 0
  # d << myDate( Date.new(2012,1,29)) ; p1 << 106 ;  p2 << 0 ; p3 << 0 ; p4 << 0 ; t1 << 810 ; t2 << 0 ; t3 << 0 ; t4 << 0
  dates << myDate( Date.new(2012,1,30)) ; p1 << 100 ;  p2 << 0 ; p3 << 0 ; p4 << 6 ; t1 << 760 ; t2 << 0 ; t3 << 0 ; t4 << 50
  dates << myDate( Date.new(2012,1,31)) ; p1 << 100 ;  p2 << 0 ; p3 << 0 ; p4 << 6 ; t1 << 760 ; t2 << 0 ; t3 << 0 ; t4 << 50
  dates << myDate( Date.new(2012,2, 1)) ; p1 << 100 ;  p2 << 0 ; p3 << 0 ; p4 << 6 ; t1 << 760 ; t2 << 0 ; t3 << 0 ; t4 << 50
  dates << myDate( Date.new(2012,2, 2)) ; p1 << 100 ;  p2 << 0 ; p3 << 0 ; p4 << 6 ; t1 << 760 ; t2 << 0 ; t3 << 0 ; t4 << 50
  dates << myDate( Date.new(2012,2, 3)) ; p1 << 100 ;  p2 << 0 ; p3 << 0 ; p4 << 6 ; t1 << 760 ; t2 << 0 ; t3 << 0 ; t4 << 50
  # d << myDate( Date.new(2012,2, 4)) ; p1 << 106 ;  p2 << 0 ; p3 << 0 ; p4 << 0 ; t1 << 810 ; t2 << 0 ; t3 << 0 ; t4 << 0
  # d << myDate( Date.new(2012,2, 5)) ; p1 << 106 ;  p2 << 0 ; p3 << 0 ; p4 << 0 ; t1 << 810 ; t2 << 0 ; t3 << 0 ; t4 << 0
  dates << myDate( Date.new(2012,2, 6)) ; p1 << 90 ;  p2 << 10 ; p3 << 0 ; p4 << 6 ; t1 << 760 ; t2 << 0 ; t3 << 0 ; t4 << 50
  dates << myDate( Date.new(2012,2, 7)) ; p1 << 90 ;  p2 << 10 ; p3 << 0 ; p4 << 6 ; t1 << 760 ; t2 << 0 ; t3 << 0 ; t4 << 50
  dates << myDate( Date.new(2012,2, 8)) ; p1 << 90 ;  p2 << 10 ; p3 << 0 ; p4 << 6 ; t1 << 760 ; t2 << 0 ; t3 << 0 ; t4 << 50
  dates << myDate( Date.new(2012,2, 9)) ; p1 << 90 ;  p2 << 10 ; p3 << 0 ; p4 << 6 ; t1 << 760 ; t2 << 0 ; t3 << 0 ; t4 << 50
  dates << myDate( Date.new(2012,2,10)) ; p1 << 90 ;  p2 << 10 ; p3 << 0 ; p4 << 6 ; t1 << 760 ; t2 << 0 ; t3 << 0 ; t4 << 50
  # d << myDate( Date.new(2012,2,11)) ; p1 << 106 ;  p2 << 0 ; p3 << 0 ; p4 << 0 ; t1 << 810 ; t2 << 0 ; t3 << 0 ; t4 << 0
  # d << myDate( Date.new(2012,2,12)) ; p1 << 106 ;  p2 << 0 ; p3 << 0 ; p4 << 0 ; t1 << 810 ; t2 << 0 ; t3 << 0 ; t4 << 0
  dates << myDate( Date.new(2012,2,13)) ; p1 << 90 ;  p2 << 4 ; p3 << 0 ; p4 << 12 ; t1 << 760 ; t2 << 0 ; t3 << 0 ; t4 << 50
  dates << myDate( Date.new(2012,2,14)) ; p1 << 90 ;  p2 << 4 ; p3 << 0 ; p4 << 12 ; t1 << 760 ; t2 << 0 ; t3 << 0 ; t4 << 50
  dates << myDate( Date.new(2012,2,15)) ; p1 << 90 ;  p2 << 4 ; p3 << 0 ; p4 << 12 ; t1 << 760 ; t2 << 0 ; t3 << 0 ; t4 << 50
  dates << myDate( Date.new(2012,2,16)) ; p1 << 90 ;  p2 << 4 ; p3 << 0 ; p4 << 12 ; t1 << 760 ; t2 << 0 ; t3 << 0 ; t4 << 50
  dates << myDate( Date.new(2012,2,17)) ; p1 << 90 ;  p2 << 4 ; p3 << 0 ; p4 << 12 ; t1 << 760 ; t2 << 0 ; t3 << 0 ; t4 << 50
  #d << myDate( Date.new(2012,2,18)) ; p1 << 106 ;  p2 << 0 ; p3 << 0 ; p4 << 0 ; t1 << 810 ; t2 << 0 ; t3 << 0 ; t4 << 0
  #d << myDate( Date.new(2012,2,19)) ; p1 << 106 ;  p2 << 0 ; p3 << 0 ; p4 << 0 ; t1 << 810 ; t2 << 0 ; t3 << 0 ; t4 << 0


  stats = Stat.all(:order => "date ASC")
  stats.each do |s|

   # ignore saturdays and sundays
   if not ["Sat","Sun"].include?  s.date.strftime("%a") then

        p1 << s.todo_feature_count
        p2 << s.inprogress_feature_count
        p3 << 0
        p4 << s.done_feature_count

        t1 << s.todo
        t2 << s.inprogress - s.inprogress_done
        t3 << s.inprogress_done
        t4 << s.done

        dates  << myDate(s.date)
    end

  end
  (1..100).each {
        |t|
         dates << myDate(Date.today+t); p1 << 0 ; p2 << 0 ; p3 << 0 ; p4 << 0 ; t1<<0;t2<<0;t3<<0;t4<<0
   }
  nn = 5
  dates = (0..dates.size).collect{|i|  (i % nn != 0 ? ' ' : dates[i] + ' ') }

  def series(array)
    array.map.join ","
  end

%>


<script language="javascript" class="code" type="text/javascript">
    var p1 = [<%=series(p1)%>]; // planned stuff
    var p2 = [<%=series(p2)%>]; // in progress stuff
    var p3 = [<%=series(p3)%>]; // in progress done
    var p4 = [<%=series(p4)%>]; // in progress done

    var t1 = [<%=series(t1)%>];
    var t2 = [<%=series(t2)%>];
    var t3 = [<%=series(t3)%>];
    var t4 = [<%=series(t4)%>];
    var d  = [<%=dates.map{ |t|"'#{t}'"}.join "," %>];

    RB.$(document).ready(function() {

    optionObj = {
        grid:{shadow:false, borderWidth:1.0 },
        stackSeries:true,
        seriesDefaults: {
           fill: true
        },
        axesDefaults: {
            tickRenderer: RB.$.jqplot.CanvasAxisTickRenderer
        },
        series: [
            { label: "done" } ,
            { label: "in progress done" },
            { label: "in progress" },
            { label: "planned" }
        ] ,
        legend: {
            show: true,
            placement: 'outsideGrid'
        },
         axes: {
          yaxis: { min: 0 ,pad: 1  },
          xaxis: {
            // Use a category axis on the x axis and use our custom ticks.
            renderer: RB.$.jqplot.CategoryAxisRenderer,
            ticks: d,
            tickPadding: 3,
            tickOptions : { angle: -90 ,fontSize: '10px'},
            fillAndStroke: true,
          }
        } ,
        highlighter: {
          show: true
        }
    };

    RB.$.jqplot.CategoryAxisRenderer.angle = -30;
    var plot1 = RB.$.jqplot ('chart1', [p4,p3,p2,p1],optionObj);
    var plot2 = RB.$.jqplot ('chart2', [t4,t3,t2,t1],optionObj);
    } );

</script>

<div id="chart1" style="height:300px; width:800px;"></div>
<br>
<div id="chart2" style="height:300px; width:800px;"></div>
